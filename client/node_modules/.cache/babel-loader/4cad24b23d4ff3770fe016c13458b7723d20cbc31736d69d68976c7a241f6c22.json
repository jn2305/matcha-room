{"ast":null,"code":"var _jsxFileName = \"/Users/jasminengo/task-tracker/client/src/pages/CreateTask.js\";\nimport React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport './CreateTask.css';\nimport axios from \"axios\";\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateTask() {\n  const now = new Date();\n  const dayOfWeek = now.getDay();\n  const dayOfMonth = now.getDay();\n  const month = now.getMonth(); // Months are zero-based in Java Script\n\n  const dayNames = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const initialValues = {\n    task: \"\",\n    dueDate: \"\"\n  };\n  const onSubmit = data => {\n    axios.post(\"http://localhost:8080/tasks\", data).then(response => {\n      console.log(\"good\");\n      // setListOfTasks(response.data);\n    });\n  };\n  const validationSchema = Yup.object().shape({\n    taskText: Yup.string().required(\"Task is required\"),\n    dueDate: Yup.date().required(\"Due date is required\").typeError(\"Due date must be a valid date\")\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createTaskPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dateContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"dayOfWeek\",\n        className: \"date\",\n        children: dayNames[dayOfWeek]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"day\",\n        className: \"date\",\n        children: dayOfMonth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"month\",\n        className: \"date\",\n        children: monthNames[month]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      validationSchema: validationSchema,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Add a task:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"taskText\",\n          component: \"span\",\n          className: \"errorMessage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          className: \"formInput\",\n          id: \"taskTextInput\",\n          name: \"taskText\",\n          placeholder: \"Task: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Due date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"dueDate\",\n          component: \"span\",\n          className: \"errorMessage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          className: \"formInput\",\n          id: \"dueDateInput\",\n          name: \"dueDate\",\n          placeholder: \"Due date: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 12\n  }, this);\n}\n_c = CreateTask;\nexport default CreateTask;\nvar _c;\n$RefreshReg$(_c, \"CreateTask\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","axios","Yup","jsxDEV","_jsxDEV","CreateTask","now","Date","dayOfWeek","getDay","dayOfMonth","month","getMonth","dayNames","monthNames","initialValues","task","dueDate","onSubmit","data","post","then","response","console","log","validationSchema","object","shape","taskText","string","required","date","typeError","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","name","component","placeholder","type","_c","$RefreshReg$"],"sources":["/Users/jasminengo/task-tracker/client/src/pages/CreateTask.js"],"sourcesContent":["import React from \"react\";\nimport {Formik, Form, Field, ErrorMessage} from 'formik'\nimport './CreateTask.css';\nimport axios from \"axios\"\nimport * as Yup from 'yup';\nfunction CreateTask() {\n    const now = new Date();\n    const dayOfWeek = now.getDay();\n    const dayOfMonth = now.getDay();\n    const month = now.getMonth(); // Months are zero-based in Java Script\n\n    \n    const dayNames =[\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    const monthNames = [\n        \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n      ];\n\n    const initialValues = {\n        task:\"\",\n        dueDate: \"\",\n    };\n\n    const onSubmit=(data) => {\n        axios.post(\"http://localhost:8080/tasks\", data)\n          .then((response) => {\n            console.log(\"good\");\n            // setListOfTasks(response.data);\n          })\n    }\n    \n    const validationSchema = Yup.object().shape({\n        taskText: Yup.string().required(\"Task is required\"),\n        dueDate: Yup.date().required(\"Due date is required\").typeError(\"Due date must be a valid date\"),\n    })\n    return <div className=\"createTaskPage\">\n        <div className=\"dateContainer\">\n            <p id=\"dayOfWeek\" className=\"date\">{dayNames[dayOfWeek]}</p>\n            <p id=\"day\" className=\"date\">{dayOfMonth}</p>\n            <p id=\"month\" className=\"date\">{monthNames[month]}</p>\n        </div>\n        <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\n\n            <Form>\n                <label>Add a task:</label>\n                <ErrorMessage name=\"taskText\" component=\"span\" className=\"errorMessage\"/>\n                <Field className=\"formInput\" id=\"taskTextInput\" name=\"taskText\" placeholder=\"Task: \"/>\n                <label>Due date:</label>\n                <ErrorMessage name=\"dueDate\" component=\"span\" className=\"errorMessage\"/>\n                <Field className=\"formInput\" id=\"dueDateInput\" name=\"dueDate\" placeholder=\"Due date: \"/>\n\n                <button type=\"submit\">Add task</button>\n            </Form>\n        </Formik>\n    </div>\n}\nexport default CreateTask; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}