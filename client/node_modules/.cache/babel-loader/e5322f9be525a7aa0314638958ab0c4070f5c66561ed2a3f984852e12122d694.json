{"ast":null,"code":"var _jsxFileName = \"/Users/jasminengo/task-tracker/client/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [listOfTasks, setListOfTasks] = useState([]);\n  const toggleTask = index => {\n    const updatedTasks = [...listOfTasks];\n    updatedTasks[index].completed = !updatedTasks[index].completed;\n    setListOfTasks(updatedTasks);\n  };\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/tasks\").then(response => {\n      // Add a 'completed' field to each task when fetching\n      const tasksWithCompletedFlag = response.data.map(task => ({\n        ...task,\n        completed: false\n      }));\n      setListOfTasks(tasksWithCompletedFlag);\n    }).catch(error => {\n      console.error(\"Error fetching tasks:\", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: listOfTasks.map((value, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `task ${value.completed ? 'completed' : ''}`,\n      onClick: () => toggleTask(key),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"taskName\",\n        children: value.task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"taskText\",\n        children: value.taskText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dueDate\",\n        children: value.dueDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"RRYbJxXWm9rJH0x8yWBcAqFErp8=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Home","_s","listOfTasks","setListOfTasks","toggleTask","index","updatedTasks","completed","get","then","response","tasksWithCompletedFlag","data","map","task","catch","error","console","className","children","value","key","onClick","fileName","_jsxFileName","lineNumber","columnNumber","taskText","dueDate","_c","$RefreshReg$"],"sources":["/Users/jasminengo/task-tracker/client/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport '../App.css';\n\nfunction Home() {\n    const [listOfTasks, setListOfTasks] = useState([]);\n\n    const toggleTask = (index) => {\n        const updatedTasks = [...listOfTasks];\n        updatedTasks[index].completed = !updatedTasks[index].completed;\n        setListOfTasks(updatedTasks);\n    };\n\n    useEffect(() => {\n        axios.get(\"http://localhost:8080/tasks\")\n            .then((response) => {\n                // Add a 'completed' field to each task when fetching\n                const tasksWithCompletedFlag = response.data.map(task => ({\n                    ...task,\n                    completed: false,\n                }));\n                setListOfTasks(tasksWithCompletedFlag);\n            })\n            .catch((error) => {\n                console.error(\"Error fetching tasks:\", error);\n            });\n    }, []);\n\n    return (\n        <div className=\"App\">\n            {listOfTasks.map((value, key) => (\n                <div\n                    className={`task ${value.completed ? 'completed' : ''}`}\n                    key={key}\n                    onClick={() => toggleTask(key)}\n                >\n                    <div className=\"taskName\">{value.task}</div>\n                    <div className=\"taskText\">{value.taskText}</div>\n                    <div className=\"dueDate\">{value.dueDate}</div>\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default Home;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMQ,UAAU,GAAIC,KAAK,IAAK;IAC1B,MAAMC,YAAY,GAAG,CAAC,GAAGJ,WAAW,CAAC;IACrCI,YAAY,CAACD,KAAK,CAAC,CAACE,SAAS,GAAG,CAACD,YAAY,CAACD,KAAK,CAAC,CAACE,SAAS;IAC9DJ,cAAc,CAACG,YAAY,CAAC;EAChC,CAAC;EAEDX,SAAS,CAAC,MAAM;IACZE,KAAK,CAACW,GAAG,CAAC,6BAA6B,CAAC,CACnCC,IAAI,CAAEC,QAAQ,IAAK;MAChB;MACA,MAAMC,sBAAsB,GAAGD,QAAQ,CAACE,IAAI,CAACC,GAAG,CAACC,IAAI,KAAK;QACtD,GAAGA,IAAI;QACPP,SAAS,EAAE;MACf,CAAC,CAAC,CAAC;MACHJ,cAAc,CAACQ,sBAAsB,CAAC;IAC1C,CAAC,CAAC,CACDI,KAAK,CAAEC,KAAK,IAAK;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIjB,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,EACfjB,WAAW,CAACW,GAAG,CAAC,CAACO,KAAK,EAAEC,GAAG,kBACxBtB,OAAA;MACImB,SAAS,EAAE,QAAQE,KAAK,CAACb,SAAS,GAAG,WAAW,GAAG,EAAE,EAAG;MAExDe,OAAO,EAAEA,CAAA,KAAMlB,UAAU,CAACiB,GAAG,CAAE;MAAAF,QAAA,gBAE/BpB,OAAA;QAAKmB,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAEC,KAAK,CAACN;MAAI;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC5C3B,OAAA;QAAKmB,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAEC,KAAK,CAACO;MAAQ;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAChD3B,OAAA;QAAKmB,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAEC,KAAK,CAACQ;MAAO;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA,GALzCL,GAAG;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMP,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACzB,EAAA,CAvCQD,IAAI;AAAA6B,EAAA,GAAJ7B,IAAI;AAyCb,eAAeA,IAAI;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}